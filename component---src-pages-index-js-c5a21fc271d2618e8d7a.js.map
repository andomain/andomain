{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["BioContainer","styled","div","props","theme","mobileBreakpoint","Bio","useStaticQuery","site","siteMetadata","author","social","BlogIndex","render","posts","this","data","allMarkdownRemark","edges","pageTitle","map","node","console","log","title","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","summary","description","excerpt","React","Component"],"mappings":"6FAAA,iDAOMA,GAPN,UAOqBC,IAAOC,IAAV,oEAAGD,CAAH,0FAIO,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,qBAmD/BC,IA9CH,WACR,IADc,EACDC,yBAAe,cAqBIC,KAAKC,aAtBvB,EAsBNC,OAtBM,EAsBEC,OAChB,OACI,kBAACX,EAAD,KAcI,qJ,8HC/CNY,E,kGACFC,OAAA,WAAU,IAEAC,EADWC,KAAKZ,MAAda,KACWC,kBAAkBC,MAErC,OACI,kBAAC,IAAD,CAAQC,UAAU,QACd,kBAAC,IAAD,MACCL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACVC,QAAQC,IAAIF,GACZ,IAAMG,EAAQH,EAAKI,YAAYD,OAASH,EAAKK,OAAOC,KACpD,OACI,6BAASC,IAAKP,EAAKK,OAAOC,MACtB,gCACI,wBACIE,MAAO,CACHC,aAAcC,YAAO,EAAI,KAG7B,kBAAC,OAAD,CACIF,MAAO,CAAEG,UAAU,QACnBC,GAAIZ,EAAKK,OAAOC,MAEfH,IAGT,+BAAQH,EAAKI,YAAYS,OAE7B,iCACI,uBACIC,wBAAyB,CACrBC,OACIf,EAAKgB,SACLhB,EAAKI,YAAYa,aACjBjB,EAAKkB,kB,GAlCzBC,IAAMC,WA8Cf7B","file":"component---src-pages-index-js-c5a21fc271d2618e8d7a.js","sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n// import Image from \"gatsby-image\";\nimport styled from \"styled-components\";\n\nimport { rhythm } from \"../utils/typography\";\n\nconst BioContainer = styled.div`\n    display: flex;\n    marginbottom: rhythm(1);\n\n    @media (max-width: ${props => props.theme.mobileBreakpoint}px) {\n        flex-direction: column;\n    }\n`;\n\nconst Bio = () => {\n    const data = useStaticQuery(graphql`\n        query BioQuery {\n            avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n                childImageSharp {\n                    fixed(width: 50, height: 50) {\n                        ...GatsbyImageSharpFixed\n                    }\n                }\n            }\n            site {\n                siteMetadata {\n                    author\n                    social {\n                        twitter\n                        github\n                    }\n                }\n            }\n        }\n    `);\n\n    const { author, social } = data.site.siteMetadata;\n    return (\n        <BioContainer>\n            {/* <Image\n                fixed={data.avatar.childImageSharp.fixed}\n                alt={author}\n                style={{\n                    marginRight: rhythm(1 / 2),\n                    marginBottom: 0,\n                    minWidth: 50,\n                    borderRadius: `100%`,\n                }}\n                imgStyle={{\n                    borderRadius: `50%`,\n                }}\n            /> */}\n            <p>\n                I'm Sam Anderson, a software developer based in Sheffield, UK\n                specializing in building nice things for nice people.\n            </p>\n        </BioContainer>\n    );\n};\n\nexport default Bio;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport { rhythm } from \"../utils/typography\";\n\nclass BlogIndex extends React.Component {\n    render() {\n        const { data } = this.props;\n        const posts = data.allMarkdownRemark.edges;\n\n        return (\n            <Layout pageTitle=\"Blog\">\n                <Bio />\n                {posts.map(({ node }) => {\n                    console.log(node);\n                    const title = node.frontmatter.title || node.fields.slug;\n                    return (\n                        <article key={node.fields.slug}>\n                            <header>\n                                <h3\n                                    style={{\n                                        marginBottom: rhythm(1 / 4),\n                                    }}\n                                >\n                                    <Link\n                                        style={{ boxShadow: `none` }}\n                                        to={node.fields.slug}\n                                    >\n                                        {title}\n                                    </Link>\n                                </h3>\n                                <small>{node.frontmatter.date}</small>\n                            </header>\n                            <section>\n                                <p\n                                    dangerouslySetInnerHTML={{\n                                        __html:\n                                            node.summary ||\n                                            node.frontmatter.description ||\n                                            node.excerpt,\n                                    }}\n                                />\n                            </section>\n                        </article>\n                    );\n                })}\n            </Layout>\n        );\n    }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        description\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}